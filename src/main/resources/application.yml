spring:
  application:
    name: read_book_online

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/read_book_online}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:thanhmaso1}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        connection:
          timeout: 30000

  main:
    allow-bean-definition-overriding: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:287363422916-cr656rmk1g50c69nu3eue6l8ml50js3r.apps.googleusercontent.com}
            client-secret: ${GOOGLE_CLIENT_SECRET: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}
            scope:
              - profile
              - email
      provider:
        google:
          authorization-uri: https://accounts.google.com/o/oauth2/auth
          token-uri: https://oauth2.googleapis.com/token
          user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:2251120362@ut.edu.vn}
    password: ${EMAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
    from: ${EMAIL_USERNAME:2251120362@ut.edu.vn}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

server:
  port: ${PORT:8080}

app:
  security:
    jwt:
      privateKey: ${JWT_PRIVATE_KEY:123abcxyzconchotoanmditmemaytin}
      prefix: Bearer
      authHeader: Authorization
      keyExpiresAt: 3600000
      refreshKey: ${JWT_REFRESH_KEY:123abcvansfkasfhaslfahfahsfjasf}
      refreshExpiresAt: 604800000 # 7 ngày, thay vì 90000 (90 giây)

endpoint:
  confirmUser: ${APP_URL:http://localhost:8080}/api/v1/auth/confirm

momo:
  partnerCode: ${MOMO_PARTNER_CODE:MOMO4MUD20240115_TEST}
  accessKey: ${MOMO_ACCESS_KEY:Ekj9og2VnRfOuIys}
  secretKey: ${MOMO_SECRET_KEY:PseUbm2s8QVJEbexsh8H3Jz2qa9tDqoa}
  endpoint: https://test-payment.momo.vn/v2/gateway/api/create
  ipnUrl: ${APP_URL:http://localhost:8080}/api/v1/ipn
  redirectUrl: ${APP_URL:http://localhost:8080}/api/v1/redirect

ghn:
  token: ${GHN_TOKEN:63af1f24-bbb0-11ef-b96e-5eff5daa8feb}
  shopId: ${GHN_SHOP_ID:5528002}
  apiUrl:
    getProvinces: https://online-gateway.ghn.vn/shiip/public-api/master-data/province
    getDistrict: https://online-gateway.ghn.vn/shiip/public-api/master-data/district
    getWard: https://online-gateway.ghn.vn/shiip/public-api/master-data/ward

map:
  google:
    key: ${GOOGLE_MAPS_KEY:AIzaSyCIuDYJHpO78yC796Dit4-yX0HIhDl1d0A}

openapi:
  service:
    api-docs: api-service
    server: ${APP_URL:http://localhost:8080}
    title: API Service
    version: 1.0.0

logging:
  level:
    org.springframework: DEBUG
    org.springframework.security: DEBUG
    org.hibernate: DEBUG
    com.example: DEBUG
    com.google.firebase: DEBUG
    com.google.api.client: DEBUG
    httpclient.wire: DEBUG
    org.apache.http: DEBUG
